{"version":3,"sources":["context/auth-context.js","pages/Auth.js","pages/Bookings.js","components/Backdrop/Backdrop.js","components/Model/Model.js","pages/Events.js","components/Navigation/MainNavigation.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExpiration","logout","AuthPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","switchModelHandler","setState","preState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","concat","fetch","method","body","JSON","stringify","headers","Content-Type","then","res","status","Error","json","resData","console","log","data","context","catch","err","createRef","react_default","a","createElement","className","onSubmit","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","BookingsPage","backdrop","model","title","children","canCancel","onCancel","canConfirm","onConfirm","EventsPage","creating","events","startCreateEventHandler","modelConfirmHandler","titleElRef","price","priceElRef","date","dateElRef","description","descriptionElRef","Authorization","fetchEvents","modelCancelHandler","_this2","eventList","map","key","_id","Fragment","Backdrop_Backdrop","Model_Model","rows","mainNavigation","auth_context","Consumer","NavLink","to","App","BrowserRouter","Provider","Navigation_MainNavigation","Switch","Redirect","from","exact","Route","path","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.81c47688.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default React.createContext({\n  token: null,\n  userId: null,\n  login: (token, userId, tokenExpiration) => {},\n  logout: () => {}\n});\n","import React, { Component } from \"react\";\n\nimport \"./Auth.css\";\nimport AuthContext from \"../context/auth-context\";\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModelHandler = () => {\n    this.setState(preState => {\n      return {\n        isLogin: !preState.isLogin\n      };\n    });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              email\n            }\n          }\n        `\n      };\n    }\n\n    fetch(\"https://pacific-depths-25242.herokuapp.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration\n          );\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">E-Mail</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={this.switchModelHandler}>\n            Switch to {this.state.isLogin ? \"Signup\" : \"Login\"}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React, { Component } from \"react\";\n\nclass BookingsPage extends Component {\n  render() {\n    return <h1>The Bookings Page</h1>;\n  }\n}\n\nexport default BookingsPage;\n","import React from \"react\";\nimport \"./Backdrop.css\";\n\nconst backdrop = props => <div className=\"backdrop\" />;\n\nexport default backdrop;\n","import React from \"react\";\n\nimport \"./Model.css\";\n\nconst model = props => (\n  <div className=\"model\">\n    <header className=\"model__header\">\n      <h1>{props.title}</h1>\n    </header>\n    <section className=\"model__content\">{props.children}</section>\n    <section className=\"model__actions\">\n      {props.canCancel && (\n        <button className=\"btn\" onClick={props.onCancel}>\n          Cancel\n        </button>\n      )}\n      {props.canConfirm && (\n        <button className=\"btn\" onClick={props.onConfirm}>\n          Confirm\n        </button>\n      )}\n    </section>\n  </div>\n);\n\nexport default model;\n","import React, { Component } from \"react\";\n\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport Model from \"../components/Model/Model\";\nimport AuthContext from \"../context/auth-context\";\nimport \"./Events.css\";\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: []\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  startCreateEventHandler = () => {\n    this.setState({ creating: true });\n  };\n\n  modelConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const price = +this.priceElRef.current.value;\n    const date = this.dateElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0 ||\n      description.trim().length === 0\n    ) {\n      console.log(111);\n      return;\n    }\n\n    const event = { title, price, date, description };\n    console.log(event);\n\n    const requestBody = {\n      query: `\n        mutation {\n          createEvent(eventInput: {title: \"${title}\", description: \"${description}\", price: ${price}, date: \"${date}\"}) {\n            _id\n            title\n            description\n            date\n            price\n            creator {\n              _id\n              email\n            }\n          }\n        }\n      `\n    };\n\n    const token = this.context.token;\n\n    fetch(\"https://pacific-depths-25242.herokuapp.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.fetchEvents();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  modelCancelHandler = () => {\n    this.setState({ creating: false });\n  };\n\n  fetchEvents() {\n    const requestBody = {\n      query: `\n        query {\n          events {\n            _id\n            title\n            description\n            date\n            price\n            creator {\n              _id\n              email\n            }\n          }\n        }\n      `\n    };\n\n    fetch(\"https://pacific-depths-25242.herokuapp.com/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        const events = resData.data.events;\n        this.setState({ events: events });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    const eventList = this.state.events.map(event => {\n      return (\n        <li key={event._id} className=\"events__list-item\">\n          {event.title}\n        </li>\n      );\n    });\n\n    return (\n      <React.Fragment>\n        {this.state.creating && <Backdrop />}\n        {this.state.creating && (\n          <Model\n            title=\"Add Event\"\n            canCancel\n            canConfirm\n            onCancel={this.modelCancelHandler}\n            onConfirm={this.modelConfirmHandler}\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  id=\"description\"\n                  rows=\"4\"\n                  ref={this.descriptionElRef}\n                />\n              </div>\n            </form>\n          </Model>\n        )}\n        {this.context.token && (\n          <div className=\"events-control\">\n            <p>Share your own Events!</p>\n            <button className=\"btn\" onClick={this.startCreateEventHandler}>\n              Create Event\n            </button>\n          </div>\n        )}\n        <ul className=\"events__list\">{eventList}</ul>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EventsPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AuthContext from \"../../context/auth-context\";\nimport \"./MainNavigation.css\";\n\nconst mainNavigation = props => (\n  <AuthContext.Consumer>\n    {context => {\n      return (\n        <header className=\"main-navigation\">\n          <div className=\"main-navigation__logo\">\n            <h1>EasyEvent</h1>\n          </div>\n          <nav className=\"main-navigation__items\">\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\n                </li>\n              )}\n              <li>\n                <NavLink to=\"/events\">Events</NavLink>\n              </li>\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport AuthPage from \"./pages/Auth\";\nimport BookingsPage from \"./pages/Bookings\";\nimport EventsPage from \"./pages/Events\";\nimport MainNavigation from \"./components/Navigation/MainNavigation\";\nimport AuthContext from \"./context/auth-context\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null\n  };\n\n  login = (token, userId, tokenExpiration) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <AuthContext.Provider\n            value={{\n              token: this.state.token,\n              userId: this.state.userId,\n              login: this.login,\n              logout: this.logout\n            }}\n          >\n            <MainNavigation />\n            <main className=\"main-content\">\n              <Switch>\n                {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n                {this.state.token && (\n                  <Redirect from=\"/auth\" to=\"/events\" exact />\n                )}\n                {!this.state.token && (\n                  <Route path=\"/auth\" component={AuthPage} />\n                )}\n                <Route path=\"/events\" component={EventsPage} />\n                {this.state.token && (\n                  <Route path=\"/bookings\" component={BookingsPage} />\n                )}\n                {!this.state.token && <Redirect to=\"/auth\" exact />}\n              </Switch>\n            </main>\n          </AuthContext.Provider>\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}